/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2020-06-12 03:32:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class menu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!-- imetadata-data -->\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"utf-8\"></meta>\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"></meta>\n");
      out.write("\t\t<meta name=\"renderer\" content=\"webkit\" />\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta>\n");
      out.write("\t\t<meta name=\"description\" content=\"\"></meta>\n");
      out.write("\t\t<meta name=\"author\" content=\"\"></meta>\n");
      out.write("\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"></meta>\n");
      out.write("\t\t<link rel=\"icon\" href=\"static/css/default/icon.png\" type=\"image/x-icon\" />\n");
      out.write("\t\t<title>CSI语音 技术吧</title>\n");
      out.write("\t\t\n");
      out.write("\t\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/comp/fontawesome/css/font-awesome.min.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/css/default/simple-line-icons/css/simple-line-icons.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/comp/animate.css/animate.min.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/css/default/toastr/toastr.min.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/css/default/bootstrap/bootstrap.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/css/default/app.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/css/default/theme.css\" data-type=\"theme\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/css/default/cover.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/css/default/step.css\" />\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"static/comp/tabs/tabs.css\" />\n");
      out.write("\t</head>\n");
      out.write("\n");
      out.write("\t<body class=\"layout-fixed\">\n");
      out.write("\t\t<script language=\"JavaScript\">\n");
      out.write("\t\t\tvar context=\"\",__contextPath=\"\",__extendOptions=\"main/options\";\n");
      out.write("\t\t</script>\n");
      out.write("\t\t<div fragment=\"navbar\" class=\"wrapper\" role=\"navigation\">\n");
      out.write("\t\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\t\tvar module = \"09282248e3ed4fb4a7d3c1c8585a7eb0\";\n");
      out.write("\t\t\t</script>\n");
      out.write("\t\t\t<nav class=\"navbar topnavbar\" style=\"min-height:44px;\" role=\"navigation\" >\n");
      out.write("\t\t\t\t<div class=\"navbar-header\" style=\"width:20%;text-align: left;\">\n");
      out.write("\t\t\t\t\t<span class=\"navbar-brand navbar-brand-h\" >\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t   \n");
      out.write("\t\t        \t\t<div class=\"brand-text\" style=\"padding-top: 3px;\">\n");
      out.write("\t\t        \t\t    <img alt=\"\" src=\"static/images/main/head/logo/LOGO.jpg\">\n");
      out.write("\t\t\t\t\t\t\t<span style=\"font-family:'Britannic Bold', 'Britannic';color:#3BC5BB;\">CSI语音</span>\n");
      out.write("\t\t\t\t\t\t\t<span style=\"font-family:'Segoe UI Emoji Bold', 'Segoe UI Emoji Normal', 'Segoe UI Emoji';color:#1D4474;\"> </span>\n");
      out.write("\t\t\t\t\t\t\t<span style=\"font-family:'Segoe UI Emoji Bold', 'Segoe UI Emoji Normal', 'Segoe UI Emoji';color:#FF9A4C;\">技术吧</span>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t</span>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\n");
      out.write("\t\t\t\t<div class=\"sysMenu\" style=\"display: none;\">\n");
      out.write("\t\t\t\t\t<ul>\n");
      out.write("\n");
      out.write("\t\t\t\t\t</ul>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t<div class=\"nav-wrapper\">\n");
      out.write("\t\t\t<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t<a>\n");
      out.write("\t\t\t\t\t\t<span class=\"user-name-csdc\">欢迎登录：<span id=userNameSpan>ADMIN</span></span>\n");
      out.write("\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\n");
      out.write("\t\t\t\t<li>\n");
      out.write("\t\t\t\t\t<a class=\"menu-icons\" title=\"修改密码\" data-search-open=\"\" data-title=\"修改密码\" modal-toggle=\"modal\" data-href=\"editpassword.html\" data-width=\"780\" data-height=\"300\">\n");
      out.write("\t\t\t\t\t\t<em class=\"fa fa-gear main-op\" style=\"font-size:13px\">修改密码</em>\n");
      out.write("\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t\t<li class=\"dropdown\">\n");
      out.write("\t\t\t\t\t<a class=\"menu-icons\" title=\"退出登录\" data-no-persist=\"true\" href=\"\" onclick=\"loginOut(); return false;\">\n");
      out.write("\t\t\t\t\t\t<!--<a class=\"menu-icons\" title=\"退出登录\" data-no-persist=\"true\" href=\"logout.d\">-->\n");
      out.write("\t\t\t\t\t\t<em class=\"fa fa-power-off  main-op\" style=\"font-size:13px\">退出登录</em>\n");
      out.write("\t\t\t\t\t</a>\n");
      out.write("\t\t\t\t</li>\n");
      out.write("\t\t\t</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t</nav>\n");
      out.write("\t\t\n");
      out.write("\t\t<aside class=\"aside\">\n");
      out.write("\t\t\n");
      out.write("\t\t\t<div class=\"aside-inner\">\n");
      out.write("\t\t\t \n");
      out.write("\t\t\t\t<nav class=\"sidebar\" data-sidebar-anyclick-close=\"\">\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t<ul class=\"nav\" id=\"leftMenuNav\"></ul>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t</nav>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t</aside>\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t\t<section id=\"content\">\n");
      out.write("\t\t\t<div id=\"funTab\"></div>\n");
      out.write("\t\t</section>\n");
      out.write("\t\t\t\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<script src=\"static/comp/sidebar/sidebar.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/jquery/dist/jquery.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/jquery.form/jquery.form.min.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/jquery/plugins/scrollbar/perfect-scrollbar.jquery.min.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/layui/layui.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/layui/layui-config.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/bootstrap/dist/js/bootstrap.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/modernizr/modernizr.custom.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/jQuery-Storage-API/jquery.storageapi.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/parsleyjs/dist/parsley.min.js\"></script>\n");
      out.write("\t\t<script src=\"static/comp/toastr/toastr.min.js\"></script>\n");
      out.write("\t\t\n");
      out.write("\t\t<script src=\"static/js/common/util.js\"></script>\n");
      out.write("\t\t<script src=\"static/js/app/app.js\"></script>\n");
      out.write("\t\t<script src=\"static/js/app/menu.js\"></script>\n");
      out.write("\t\t<script src=\"static/js/common/autoheight.js\"></script>\n");
      out.write("\n");
      out.write("\t</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
